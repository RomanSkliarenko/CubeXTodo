{"ast":null,"code":"var _jsxFileName = \"/home/user/Projects/cubex-todo-roman-skliarenko/src/components/todoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodolistItem from \"./todoListItem\";\nimport shortid from \"../../node_modules/shortid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo() {\n  _s();\n\n  const [todoList, setTodoList] = useState([]);\n  const [todoInputValue, setTodoInputValue] = useState(\"\");\n\n  const swapBtn = (name, id) => {\n    console.log(name, id);\n    let todoIndex = todoList.findIndex(el => {\n      if (el.id === id) {\n        return el;\n      } else {\n        return null;\n      }\n    });\n    const currentTodo = todoList.find(el => el.id === id);\n    todoList.splice(todoIndex, 1);\n\n    if (name === \"up\") {\n      let newTodo = todoList.splice(todoIndex - 1, 0, currentTodo);\n      setTodoList(newTodo);\n    } else if (name === \"down\") {\n      todoList.splice(todoIndex + 1, 0, currentTodo);\n    }\n\n    this.setState(prevState => {\n      return {\n        tasks: todoList,\n        ...prevState\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"todoForm\",\n      onSubmit: event => {\n        event.preventDefault();\n        setTodoList([...todoList, {\n          id: shortid.generate(),\n          content: todoInputValue\n        }]);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"todoInput\",\n        name: \"addTodoInputValue\",\n        onChange: e => {\n          setTodoInputValue(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"todoButton\",\n        children: \"ADD task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todoList\",\n      children: todoList.map(item => TodolistItem(item, swapBtn))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"YtB9AIuilEM7vfGC5TIBN79A5QY=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/user/Projects/cubex-todo-roman-skliarenko/src/components/todoForm.js"],"names":["React","useState","TodolistItem","shortid","Todo","todoList","setTodoList","todoInputValue","setTodoInputValue","swapBtn","name","id","console","log","todoIndex","findIndex","el","currentTodo","find","splice","newTodo","setState","prevState","tasks","event","preventDefault","generate","content","e","target","value","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,4BAApB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;;AACA,QAAMQ,OAAO,GAAG,CAACC,IAAD,EAAOC,EAAP,KAAc;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,EAAlB;AAEA,QAAIG,SAAS,GAAGT,QAAQ,CAACU,SAAT,CAAoBC,EAAD,IAAQ;AACzC,UAAIA,EAAE,CAACL,EAAH,KAAUA,EAAd,EAAkB;AAChB,eAAOK,EAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF,KANe,CAAhB;AAOA,UAAMC,WAAW,GAAGZ,QAAQ,CAACa,IAAT,CAAeF,EAAD,IAAQA,EAAE,CAACL,EAAH,KAAUA,EAAhC,CAApB;AACAN,IAAAA,QAAQ,CAACc,MAAT,CAAgBL,SAAhB,EAA2B,CAA3B;;AACA,QAAIJ,IAAI,KAAK,IAAb,EAAmB;AAChB,UAAIU,OAAO,GAAGf,QAAQ,CAACc,MAAT,CAAgBL,SAAS,GAAG,CAA5B,EAA+B,CAA/B,EAAkCG,WAAlC,CAAd;AACAX,MAAAA,WAAW,CAACc,OAAD,CAAX;AACF,KAHD,MAGO,IAAIV,IAAI,KAAK,MAAb,EAAqB;AAC1BL,MAAAA,QAAQ,CAACc,MAAT,CAAgBL,SAAS,GAAG,CAA5B,EAA+B,CAA/B,EAAkCG,WAAlC;AACD;;AACD,SAAKI,QAAL,CAAeC,SAAD,IAAe;AAC3B,aAAO;AAAEC,QAAAA,KAAK,EAAElB,QAAT;AAAmB,WAAGiB;AAAtB,OAAP;AACD,KAFD;AAGD,GArBD;;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAA2B,MAAA,QAAQ,EAAGE,KAAD,IAAS;AAC1CA,QAAAA,KAAK,CAACC,cAAN;AACAnB,QAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc;AAC1BM,UAAAA,EAAE,EAAER,OAAO,CAACuB,QAAR,EADsB;AAE1BC,UAAAA,OAAO,EAAEpB;AAFiB,SAAd,CAAD,CAAX;AAGA,OALJ;AAAA,8BAME;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,WAFZ;AAGE,QAAA,IAAI,EAAC,mBAHP;AAIE,QAAA,QAAQ,EAAGqB,CAAD,IAAO;AACfpB,UAAAA,iBAAiB,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AACD;AANH;AAAA;AAAA;AAAA;AAAA,cANF,eAcE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,gBAA0BzB,QAAQ,CAAC0B,GAAT,CAAcC,IAAD,IAAU9B,YAAY,CAAC8B,IAAD,EAAMvB,OAAN,CAAnC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAlDQL,I;;KAAAA,I;AAmDT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport TodolistItem from \"./todoListItem\";\nimport shortid from \"../../node_modules/shortid\";\n\nfunction Todo() {\n  const [todoList, setTodoList] = useState([]);\n  const [todoInputValue, setTodoInputValue] = useState(\"\");\n  const swapBtn = (name, id) => {\n    console.log(name, id)\n\n    let todoIndex = todoList.findIndex((el) => {\n      if (el.id === id) {\n        return el;\n      } else {\n        return null;\n      }\n    });\n    const currentTodo = todoList.find((el) => el.id === id);\n    todoList.splice(todoIndex, 1);\n    if (name === \"up\") {\n       let newTodo = todoList.splice(todoIndex - 1, 0, currentTodo);\n       setTodoList(newTodo)\n    } else if (name === \"down\") {\n      todoList.splice(todoIndex + 1, 0, currentTodo);\n    }\n    this.setState((prevState) => {\n      return { tasks: todoList, ...prevState };\n    });\n  };\n\n\n  return (\n    <div className=\"todoContainer\">\n      <form className=\"todoForm\" onSubmit={(event)=>{\n          event.preventDefault()\n          setTodoList([...todoList, {\n          id: shortid.generate(),\n          content: todoInputValue\n      }])}}>\n        <input\n          type=\"text\"\n          className=\"todoInput\"\n          name=\"addTodoInputValue\"\n          onChange={(e) => {\n            setTodoInputValue(e.target.value);\n          }}\n        ></input>\n        <button type=\"submit\" className=\"todoButton\">\n          ADD task\n        </button>\n      </form>\n      <ul className=\"todoList\">{todoList.map((item) => TodolistItem(item,swapBtn))}</ul>\n    </div>\n  );\n}\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}