{"ast":null,"code":"var _jsxFileName = \"/home/user/Projects/cubex-todo-roman-skliarenko/src/components/todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo() {\n  _s();\n\n  // state = {\n  //     addTodoInputValue: \"\"\n  // }\n  const [todoInputValue, setTodoInputValue] = useState(\"0\");\n\n  const changeInputValueHandler = event => {\n    console.log(event);\n    this.setState(prevState => {\n      return { ...prevState,\n        [event.target.name]: event.target.value\n      };\n    });\n  };\n\n  const submitForm = () => {\n    document.createElement('ul');\n    document.createElement('li');\n  }; // render() {\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"todoForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"todoInput\",\n        name: \"addTodoInputValue\",\n        onChange: event => {\n          this.changeInputValueHandler(event);\n        },\n        value: this.state.addTodoInputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"todoButton\",\n        children: \"ADD task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this); // }\n}\n\n_s(Todo, \"J/QF+IeDdxczyTUvv5DYqSaIuis=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/user/Projects/cubex-todo-roman-skliarenko/src/components/todo.js"],"names":["React","Component","useState","Todo","todoInputValue","setTodoInputValue","changeInputValueHandler","event","console","log","setState","prevState","target","name","value","submitForm","document","createElement","state","addTodoInputValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,IAAT,GAAe;AAAA;;AACX;AACA;AACA;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCH,QAAQ,CAAC,GAAD,CAApD;;AAGA,QAAMI,uBAAuB,GAAIC,KAAD,IAAW;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAKG,QAAL,CAAeC,SAAD,IAAa;AACvB,aAAO,EACH,GAAGA,SADA;AAEH,SAACJ,KAAK,CAACK,MAAN,CAAaC,IAAd,GAAqBN,KAAK,CAACK,MAAN,CAAaE;AAF/B,OAAP;AAIH,KALD;AAMH,GARD;;AASA,QAAMC,UAAU,GAAG,MAAM;AACrBC,IAAAA,QAAQ,CAACC,aAAT,CAAuB,IAAvB;AACAD,IAAAA,QAAQ,CAACC,aAAT,CAAuB,IAAvB;AAEH,GAJD,CAhBW,CAsBX;;;AACI,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,WAA7B;AAAyC,QAAA,IAAI,EAAC,mBAA9C;AAAkE,QAAA,QAAQ,EAAGV,KAAD,IAAS;AAAC,eAAKD,uBAAL,CAA6BC,KAA7B;AAAoC,SAA1H;AAA4H,QAAA,KAAK,EAAE,KAAKW,KAAL,CAAWC;AAA9I;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,CAvBO,CAgCX;AACH;;GAjCQhB,I;;KAAAA,I","sourcesContent":["import React, { Component, useState } from 'react'\n\nfunction Todo(){\n    // state = {\n    //     addTodoInputValue: \"\"\n    // }\n    const [todoInputValue, setTodoInputValue] = useState(\"0\");\n\n\n    const changeInputValueHandler = (event) => {  \n        console.log(event)\n        this.setState((prevState)=>{\n            return {\n                ...prevState,\n                [event.target.name]: event.target.value,\n            }\n        })\n    }\n    const submitForm = () => {\n        document.createElement('ul')\n        document.createElement('li')\n\n    }\n\n    // render() {\n        return (\n            <div className=\"todoContainer\">\n                <form className='todoForm'> \n                    <input type='text' className='todoInput' name='addTodoInputValue' onChange={(event)=>{this.changeInputValueHandler(event)}} value={this.state.addTodoInputValue}></input>\n                    <button type='button' className='todoButton'>ADD task</button>\n                </form>\n\n            </div>\n        )\n    // }\n}\n\n"]},"metadata":{},"sourceType":"module"}